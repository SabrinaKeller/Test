install.packages(shiny)
install.packages("shiny")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(shiny)
install.packages("shiny")
install.packages(c("Rcpp", "httpuv", "shiny"))
install.packages("shiny")
install.packages("httpuv")
install.packages("shiny")
update.packages()
y
y
install.packages("shiny")
install.packages("httpuv")
install.packages("shiny")
install.packages("httpuv")
update("httpuv")
library("httpuv", lib.loc="~/R/win-library/3.3")
install.packages("httpuv")
install.packages("httpuv")
install.packages("C:/Users/jj/Downloads/httpuv_1.4.5.tar.gz", repos = NULL, type = "source")
library("httpuv", lib.loc="~/R/win-library/3.3")
install.packages(c("digest", "fansi", "foreign", "ggplot2", "glue", "httpuv", "later", "MASS", "mgcv", "mime", "openssl", "Rcpp", "RCurl", "rlang", "scales", "sourcetools", "stringi", "survival", "testthat", "utf8", "yaml"))
install.packages("httpuv")
install.packages("shiny")
install.packages("installr")
library(installr)
updateR()
install.packages("httpuv")
install.packages("shiny")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
install.packages("dplyr")
library(dplyr)
install.packages("xlsx")
source('~/.active-rstudio-document', echo=TRUE)
library("xlsx", lib.loc="~/R/win-library/3.5")
require(xlsx)
require(xlsx)
dat <- read.xlsx("preg_MatchMaker_wb_1.xlsmd")
dat <- read.xlsx("preg_MatchMaker_wb_1.xlsmd","kid_ep_allAllele")
dat <- read.xlsx("preg_MatchMaker_wb_1.xlsmd",7)
setwd("C:\Users\jj\Documents\GitHub\Test")
library(readxl)
dataset <- read_excel(NULL)
View(dataset)
load("~/GitHub/Test/preg_MatchMaker_wb_1.xlsm")
load("~/GitHub/Test/preg_MatchMaker_wb_1.xlsm")
dir()
setwd("C:\Users\jj\Documents\GitHub\Test")
setwd("C:/Users/jj/Documents/GitHub/Test")
load("~/GitHub/Test/preg_MatchMaker_wb_1.xlsm")
read.xlsx("preg_MatchMaker_wb_1.xlsm",7)
load("~/GitHub/Test/preg_MatchMaker_wb_1.xlsm")
dat <- read.xlsx("preg_MatchMaker_wb_1.xlsm",7)
head(dat)
library(readxl)
preg_MatchMaker1 <- read_excel("preg_MatchMaker1.xlsx")
View(preg_MatchMaker1)
dat <- preg_MatchMaker1
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(plyr)
install.packages("plyr")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(dplyr)
ddply(dat,.(Polymorphisms),numcolwise(sum))
df %>% group_by(Polymorphisms) %>% summarise("MFI Baseline" = sum("MFI Baseline"))
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
warnings()
is.numeric(dat$`MFI baseline`)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(dat2)
source('~/.active-rstudio-document', echo=TRUE)
dat2 <- dat[10:8]
dat2 <- dat[1:8,]
View(dat2)
dat2 %>%
group_by_(.dots=c("PatientID","Epitope")) %>%
summarize(x=mean("Baseline MFI"))
dat2$`MFI baseline`<- as.numeric(dat2$`MFI baseline`)
dat2 %>%
group_by_(.dots=c("PatientID","Epitope")) %>%
summarize(x=mean("Baseline MFI"))
x <- mean("Baseline MFI")
dat2$`MFI baseline`
x <- sum(dat2$`MFI baseline`)
x
dat2 %>%
group_by_(.dots=c("PatientID","Epitope")) %>%
summarize(x=mean('Baseline MFI'))
dat2 %>%
group_by_(.dots=c("PatientID","Epitope")) %>%
summarize(x=mean(Baseline MFI))
dat2 %>%
group_by_(.dots=c("PatientID","Epitope")) %>%
summarize(x=sum("Baseline MFI"))
dat2 %>%
group_by_(.dots=c("PatientID","Epitope")) %>%
summarize(x=sum(dat2$`MFI baseline`))
dat %>%
group_by_(.dots=c("PatientID","Epitope")) %>%
summarize(x=sum(dat$`MFI baseline`))
dat %>%
group_by_(.dots=c("PatientID","Epitope")) %>%
summarize(x=min(dat$`MFI baseline`))
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
dat %>%
group_by("PatientID","Epitope") %>%
summarize(mean_size = mean(dat$`MFI baseline, na.rm = TRUE))
)
)
dat %>%
group_by("PatientID","Epitope") %>%
summarize(mean_size = mean(dat$`MFI baseline, na.rm = TRUE))
dat %>%
group_by("PatientID","Epitope") %>%
summarize(mean_size = mean(dat$`MFI baseline))
dat %>%
group_by_("PatientID","Epitope") %>%
summarize(mean_size = mean(dat$`MFI baseline))
dat %>%
group_by_(.dots=c("PatientID","Epitope")) %>%
summarize(x=max(dat$`MFI baseline`))
dat %>%
group_by_("PatientID","Epitope") %>%
summarize(x = max(dat$`MFI baseline`))
dat2 %>%
group_by_("PatientID","Epitope") %>%
summarize(x = max(dat2$`MFI baseline`))
dat2 <- dat[1000:8]
dat2 %>%
group_by_("PatientID","Epitope") %>%
summarize(x = max(dat2$`MFI baseline`))
dat2 <- dat[1000:8]
dat2 <- dat[1000:8,]
View(dat2)
dat2 %>%
group_by_("PatientID","Epitope") %>%
summarize(x = max(dat2$`MFI baseline`))
dat2 <- dat[20:8,]
View(dat2)
dat2 %>%
group_by_("PatientID","Epitope") %>%
summarize(x = max(dat2$`MFI baseline`))
dat2 %>%
group_by(PatientID, Epitope) %>%
summarise(a_sum=sum(`MFI baseline`))
dat2 %>%
group_by(PatientID, Epitope) %>%
summarise(a_min=min(`MFI baseline`))
dat %>%
group_by(PatientID, Epitope) %>%
summarise(a_min=min(`MFI baseline`))
dat <- read_excel("preg_MatchMaker1.xlsx")
View(dat)
library(readxl)
preg_MatchMaker_wb_1 <- read_excel("preg_MatchMaker_wb_1.xlsm",
sheet = "unique_child_eps_epReg")
View(preg_MatchMaker_wb_1)
uniqEps <- preg_MatchMaker_wb_1 <- read_excel("preg_MatchMaker_wb_1.xlsm",  +
sheet = "unique_child_eps_epReg")
uniqEps <- preg_MatchMaker_wb_1 <- read_excel("preg_MatchMaker_wb_1.xlsm",
+ sheet = "unique_child_eps_epReg")
uniqEps <- preg_MatchMaker_wb_1 <- read_excel("preg_MatchMaker_wb_1.xlsm", sheet = "unique_child_eps_epReg")
names(uniqEps)[names(uniqEps) == "Kid_alleles_ep_MFI.Allele"] <- "allele"
View(uniqEps)
View(dat)
names(dat)[names(dat) == "Kid_alleles_ep_MFI.Allele"] <- "allele"
names(uniqEps)[names(uniqEps) == "Kid_alleles_ep_MFI.Allele"] <- "allele"
dat %>%
group_by(PatientID, allele, Epitope) %>%
summarise(a_min=min(`MFI baseline`))
View(dat)
View(dat)
wdir()
dir()
wkdir()
getwd()
dat3 <- read.csv("Book1")
dat3 <- read.csv("Book1.csv")
View(dat3)
dat3 <- read.csv("Book1.csv")
dat3 <- read.csv("Book1.csv")
gp1 <- dat %>%
group_by(PatientID, allele, Epitope) %>%
summarise(a_min=min(`MFI baseline`))
dat %>%
group_by(PatientID, allele, Epitope) %>%
summarise(a_min=min(`MFI baseline`))
library(dplyr)
dat %>%
group_by(PatientID, allele, Epitope) %>%
summarise(a_min=min(`MFI baseline`))
gp1<- dat %>%
group_by(PatientID, allele, Epitope) %>%
summarise(a_min=min(`MFI baseline`))
head(gp1)
gp1$pos <- gp1$a_min > 500
head(gp1)
gp1$new <- apply(gp1[, grep("PatientID", names(gp1))], MARGIN = 1,
function(x) sum(x == x, na.rm = T))
head(gp1)
gp1$new <- apply(gp1[, grep("PatientID", names(gp1))], MARGIN = 2,
function(x) sum(x == x, na.rm = T))
head(gp1)
gp1$new <- apply(gp1[, grep("PatientID", names(gp1))], MARGIN = 1,
function(x) sum(x == x$PatientID, na.rm = T))
gp1$new <- apply(gp1[, grep("PatientID", names(gp1))], MARGIN = 1,
function(x) sum(x == gp1$PatientID, na.rm = T))
head(gp1)
gp1$epTot <- apply(gp1[, grep("PatientID", names(gp1))], MARGIN = 1,
function(x) sum(x == gp1$PatientID, na.rm = T))
head(gp1)
gp1$epPos <- apply(gp1[, grep("PatientID", names(gp1))], MARGIN = 1,
function(x) sum(x == gp1$PatientID & gp1$pos == TRUE, na.rm = T))
head(gp1)
gp1$epPos <- apply(gp1[, grep("PatientID", names(gp1))], MARGIN = 1,
function(x) sum(x == gp1$PatientID & gp1$pos == FALSE, na.rm = T))
head(gp1)
cutOff
library(shiny)
library(dplyr)
library(readxl)
setwd("~/MEGAsync/shiny/epitopeData/epData")
dat<- read.csv("Book1.csv")
cutOff <- 500
gp1<- dat %>%
group_by(PatientID, allele, Epitope) %>%
summarise(a_min = min(MFI))
dat<- read.csv("Book1.csv")
gp1<- dat %>%
group_by(PatientID, allele, epitope) %>%
summarise(a_min = min(MFI))
head(gp1)
gp1$pos <- gp1$a_min > cutOff
head(gp1)
cutOff <- 50
gp1$pos <- gp1$a_min > cutOff
head(gp1)
cutOff <- 500
#Add DSA POS-NEG col
gp1$pos <- gp1$a_min > cutOff
gp1$epTot <- apply(gp1[, grep("PatientID", names(gp1))], MARGIN = 1,
function(x) sum(x == gp1$PatientID, na.rm = TRUE))
head(gp1)
gp1$epPos <- apply(gp1[, grep("PatientID", names(gp1))], MARGIN = 1,
function(x) sum(x == gp1$PatientID & gp1$pos == TRUE, na.rm = T))
head(gp1)
#Add percentage col
gp1$perc <- gp1$pos / gp1$epTot * 100
head(gp1)
gp1$perc <- (gp1$pos / gp1$epTot) * 100
library("shiny")
setwd("~/MEGAsync/shiny/epitopeData-Shiny/epData")
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
